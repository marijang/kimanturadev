!function(t){function e(e){for(var i,c,a=e[0],r=e[1],l=e[2],h=0,p=[];h<a.length;h++)c=a[h],s[c]&&p.push(s[c][0]),s[c]=0;for(i in r)Object.prototype.hasOwnProperty.call(r,i)&&(t[i]=r[i]);for(u&&u(e);p.length;)p.shift()();return o.push.apply(o,l||[]),n()}function n(){for(var t,e=0;e<o.length;e++){for(var n=o[e],i=!0,a=1;a<n.length;a++){var r=n[a];0!==s[r]&&(i=!1)}i&&(o.splice(e--,1),t=c(c.s=n[0]))}return t}var i={},s={2:0},o=[];function c(e){if(i[e])return i[e].exports;var n=i[e]={i:e,l:!1,exports:{}};return t[e].call(n.exports,n,n.exports,c),n.l=!0,n.exports}c.m=t,c.c=i,c.d=function(t,e,n){c.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:n})},c.r=function(t){Object.defineProperty(t,"__esModule",{value:!0})},c.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return c.d(e,"a",e),e},c.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},c.p="/wp-content/themes/kimnatura/skin/public/";var a=window.webpackJsonp=window.webpackJsonp||[],r=a.push.bind(a);a.push=e,a=a.slice();for(var l=0;l<a.length;l++)e(a[l]);var u=r;o.push([362,0]),n()}({129:function(t,e,n){"use strict";(function(t){n.d(e,"a",function(){return i});class i{constructor(t=".js-scroll-to-anchor",e=".js-scroll-to-top"){this.globalElement=t,this.topElement=e}scrolltoGlobalElement(){t(this.globalElement).click(e=>{e.preventDefault();const n=t(e.target).attr("href");this.scrollToSelector(n)})}scrolltoTopElement(){t(this.topElement).click(t=>{t.preventDefault(),this.scrollToTop()})}scrollToSelector(e){const n=t(e);n.length&&t("html, body").animate({scrollTop:n.offset().top},500)}scrollToTop(){t("html, body").animate({scrollTop:0},500)}}}).call(this,n(5))},130:function(t,e,n){"use strict";(function(t){n.d(e,"a",function(){return s});var i=n(64);class s{constructor(e=".js-radio"){this.containerSelector=e,this.checkedClass="radio--checked",this.disabledClass="radio--disabled",this.focusClass="radio--focus",this.$container=t(this.containerSelector),this.$link=this.$container.find("a"),this.$input=this.$container.find("input[type=radio]")}escapeString(t){return void 0!==t&&i.a.escapeString(t)}getInputById(e){return t(`input[type="radio"]#${e}`)}getInputNameById(e){return t(`input[type="radio"]#${e}`).attr("name")}getContainerByInput(t){return this.getInputById(t).closest(this.containerSelector)}check(t){this.getContainerByInput(t).addClass(this.checkedClass)}uncheck(t){const e=this.getInputNameById(t);this.$container.find(`input[name="${e}"]`).closest(this.containerSelector).removeClass(this.checkedClass)}setDisabled(t){this.getContainerByInput(t).addClass(this.disabledClass)}setFocus(t){this.getContainerByInput(t).addClass(this.focusClass)}unsetFocus(t){this.getContainerByInput(t).removeClass(this.focusClass)}resetAll(t){t.find(this.containerSelector).removeClass(this.checkedClass),t.find('input[type="radio"]').prop("checked",!1)}toggle(t){const e=this.escapeString(t);this.uncheck(e),this.check(e)}init(t){const e=this.escapeString(t),n=this.getInputById(e);n.prop("checked")&&this.check(e),n.is(":disabled")&&this.setDisabled(e)}}}).call(this,n(5))},131:function(t,e,n){"use strict";(function(t){n.d(e,"a",function(){return s});var i=n(64);class s{constructor(e=".js-checkbox"){this.containerSelector=e,this.checkedClass="checkbox--checked",this.disabledClass="checkbox--disabled",this.focusClass="checkbox--focus",this.$container=t(this.containerSelector),this.$link=this.$container.find("a"),this.$input=this.$container.find("input[type=checkbox]")}escapeString(t){return void 0!==t&&i.a.escapeString(t)}getInputById(e){return t(`input[type="checkbox"]#${e}`)}getContainerByInput(t){return this.getInputById(t).closest(this.containerSelector)}check(t){this.getContainerByInput(t).addClass(this.checkedClass)}uncheck(t){this.getContainerByInput(t).removeClass(this.checkedClass)}setDisabled(t){this.getContainerByInput(t).addClass(this.disabledClass)}unsetDisabled(t){this.getContainerByInput(t).removeClass(this.disabledClass)}setFocus(t){this.getContainerByInput(t).addClass(this.focusClass)}unsetFocus(t){this.getContainerByInput(t).removeClass(this.focusClass)}resetAll(t){t.find(this.containerSelector).removeClass(this.checkedClass),t.find('input[type="checkbox"]').prop("checked",!1)}toggle(t){const e=this.escapeString(t),n=this.getInputById(e);n.is(":disabled")?this.setDisabled(e):n.prop("checked")?this.check(e):this.uncheck(e)}setChecked(t){const e=this.escapeString(t);this.getInputById(e).prop("checked",!0),this.check(e)}setUnchecked(t){const e=this.escapeString(t);this.getInputById(e).prop("checked",!1),this.uncheck(e)}init(t){const e=this.escapeString(t),n=this.getInputById(e);n.prop("checked")&&this.check(e),n.is(":disabled")&&this.setDisabled(e)}}}).call(this,n(5))},133:function(t,e,n){"use strict";n.r(e);n(361),n(359),n(157);var i=n(65),s=n.n(i);s.a.apiKey="",s.a.notifyReleaseStages=["production","staging"],s.a.releaseStage="production";n(156),n(155),n(154),n(153),n(152),n(151),n(150),n(148),n(146);var o=n(5),c=n.n(o);c()(document).ready(function(){var t=c()("select.js-select-toggle"),e=new CustomEvent("change",{bubbles:!0});t.each(function(){var t=c()("option",this),n=c()(this),i=this,s=c()('<div class="select-toggle__button-group btn1"></div>');n.hide(),t.each(function(){if(c()(this).val()){var t=c()('<div class="select-toggle__button btn1" data-value="'+c()(this).val()+'">'+c()(this).text()+"</div>");c()(this).is(":checked")&&t.addClass("is-active");var n=c()(this).val();t.on("click",function(){c()(i).val(n),i.dispatchEvent(e),c()(this).parent().find(".is-active").removeClass("is-active"),c()(this).addClass("is-active")}),s.append(t)}}),n.after(s)})});n(145),n(144),n(143),n(142),n(141),n(140),n(139),n(138)},138:function(t,e){},139:function(t,e,n){t.exports=n.p+"images/safari.png"},140:function(t,e,n){t.exports=n.p+"images/opera.png"},141:function(t,e,n){t.exports=n.p+"images/firefox.png"},142:function(t,e,n){t.exports=n.p+"images/edge.png"},143:function(t,e,n){t.exports=n.p+"images/chrome.png"},144:function(t,e,n){t.exports=n.p+"images/logo.svg"},145:function(t,e,n){(function(t){t(function(){t(".input-number__wrapper").on("click",".input-number__decrement",function(e){!function(e){e.preventDefault();var n=t(e.target).parent(),i=parseInt(n.find("input").val(),10);!isNaN(i)&&i>0?n.find("input").val(i-1):n.find("input").val(0)}(e)}),t(".input-number__wrapper").on("click",".input-number__increment",function(e){!function(e){e.preventDefault(),t(e.target).data("field");var n=t(e.target).parent(),i=parseInt(n.find("input").val(),10);isNaN(i)?n.find("input").val(0):n.find("input").val(i+1)}(e)})})}).call(this,n(5))},146:function(t,e,n){(function(t){t(function(){t(".slick-dots button").length;last=2;var e=!1;t(".slider-slick").on("mouseover",function(t){!function(t){t.clientX;t.clientY}(t),e||(e=!0,setTimeout(function(){},2e3))});(function(t){for(var e=0,n=0;t&&!isNaN(t.offsetLeft)&&!isNaN(t.offsetTop);)e+=t.offsetLeft-t.scrollLeft,n+=t.offsetTop-t.scrollTop,t=t.offsetParent;return{top:n,left:e}})(document.getElementById(".slider-slick")).top})}).call(this,n(5))},148:function(t,e,n){(function(t){var e=n(147);t(function(){var t=document.querySelector("#page-navigation");new e(t)})}).call(this,n(5))},150:function(t,e,n){"use strict";(function(t){n(149);t(function(){t(".hero-slider-slick").slick({infinite:!1,infinite:!0,slidesToShow:1,dots:!0,arrows:!1}),t(".slider-slick").slick({infinite:!1,infinite:!0,slidesToShow:3,slidesToScroll:3,dots:!0,centerMode:!1,responsive:[{breakpoint:1024,settings:{slidesToShow:3,infinite:!0}},{breakpoint:600,settings:{slidesToShow:3,dots:!0}},{breakpoint:300,settings:"unslick"}]})})}).call(this,n(5))},151:function(t,e,n){(function(t){t(function(){const t=document.querySelector(".js-progress"),e=document.body,n=document.documentElement,i=()=>({height:Math.max(e.scrollHeight,e.offsetHeight,n.clientHeight,n.scrollHeight,n.offsetHeight),vh:Math.max(n.clientHeight,window.innerHeight||0)});let s=0,o=i();const c=()=>t.setAttribute("value",100-(o.height-s-o.vh)/o.height*100),a=()=>{s=(window.pageYOffset||document.scrollTop)-(document.clientTop||0),requestAnimationFrame(c)},r=()=>{o=i(),requestAnimationFrame(c)};t&&(t.setAttribute("max",100),window.addEventListener("scroll",a,!1),window.addEventListener("resize",r,!1))})}).call(this,n(5))},152:function(t,e,n){"use strict";(function(t){var e=n(93);t(function(){t(".js-cookies-notification-btn").on("click",function(n){n.preventDefault(),t(".js-cookies-notification").slideUp(),e.a.setCookie("cookie-law","true",e.a.setOneMonth(),"/")})})}).call(this,n(5))},153:function(t,e,n){"use strict";(function(t){var e=n(129);t(function(){const t=new e.a;t.scrolltoGlobalElement(),t.scrolltoTopElement()})}).call(this,n(5))},154:function(t,e,n){"use strict";(function(t){var e=n(131),i=n(130);t(function(){const n=new e.a;n.$input.each(function(){const e=t(this).attr("id");n.init(e)}),n.$container.on("change",function(){const e=t(this).attr("for");n.toggle(e)}),n.$input.keypress(function(e){if(0===e.keyCode||32===e.keyCode){const e=t(this).attr("id");n.toggle(e)}}),n.$link.on("click",function(t){t.stopPropagation()}),n.$input.bind("focus",function(){const e=t(this).attr("id");n.setFocus(e)}),n.$input.bind("blur",function(){const e=t(this).attr("id");n.unsetFocus(e)});const s=new i.a;s.$input.each(function(){const e=t(this).attr("id");s.init(e)}),s.$container.on("change",function(){const e=t(this).attr("for");s.toggle(e)}),s.$link.on("click",function(t){t.stopPropagation()}),s.$input.bind("focus",function(){const e=t(this).attr("id");s.setFocus(e)}),s.$input.bind("blur",function(){const e=t(this).attr("id");s.unsetFocus(e)})})}).call(this,n(5))},155:function(t,e){WebFont.load({google:{families:["Poppins 300,300i,400,600,700,700i:latin-ext","Material Icons","Merriweather 300,300i,400,600,700,700i&subset=latin-ext"]}})},156:function(t,e,n){"use strict";(function(t){var e=n(132);t(function(){const t=Object(e.a)();t.on("src:after",t=>{"img"!==t.localName&&(t.style.backgroundImage=`url("${t.getAttribute("data-normal")}")`,t.removeAttribute("src"))}),t.update().check().handlers(!0)})}).call(this,n(5))},361:function(t,e,n){},362:function(t,e,n){t.exports=n(133)},64:function(t,e,n){"use strict";n.d(e,"a",function(){return i});const i={escapeString:t=>t.replace(/([;&,.+*~':"!^#$%@[\]()=>|])/g,"\\$1")}},93:function(t,e,n){"use strict";n.d(e,"a",function(){return i});const i={setCookie(t,e,n,i){const s=new Date;s.setTime(s.getTime()+n);let o="";void 0!==i&&(o=`path=${i};`),document.cookie=`${t}=${e};${o}expires=${s.toUTCString()}`},getCookie(t){const e=document.cookie.match(`(^|;) ?${t}=([^;]*)(;|$)`);return e?e[2]:null},setHalfDay:()=>432e5,setOneDay:()=>864e5,setOneYear:()=>3154e7,setHalfAnHour:()=>18e5,setOneMonth:()=>2628e6}}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,